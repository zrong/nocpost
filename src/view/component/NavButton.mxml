<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" horizontalAlign="center" creationComplete="init()">
<mx:Script>
	<![CDATA[
		import common.IStep;
		import utils.Config;
		import common.StepUpload;
		import utils.Output;
		import mx.controls.Button;
		import mx.containers.ViewStack;
		import flash.events.MouseEvent;
		import mx.core.Application;
		import net.zengrong.logging.Logger;
		
		[Bindable]
		public var vs:ViewStack;
		
		public var prevBTN:Button;
		public var nextBTN:Button;
		public var acceptBTN:Button;
		public var rejectBTN:Button;
		public var submitBTN:Button;
		
		private function init():void
		{
			buildButtons();
			addChild(rejectBTN);
			addChild(acceptBTN);
		}
		
		private function buildButtons():void
		{
			acceptBTN = new Button();
			acceptBTN.width = 100;
			acceptBTN.height = 30;
			acceptBTN.label = '同意';
			acceptBTN.addEventListener(MouseEvent.CLICK, acceptClickHandler);
			acceptBTN.enabled = false;
			
			rejectBTN = new Button();
			rejectBTN.width = 100;
			rejectBTN.height = 30;
			rejectBTN.label = '不同意';
			rejectBTN.addEventListener(MouseEvent.CLICK, rejectClickHandler);
			
			prevBTN = new Button();
			prevBTN.width = 100;
			prevBTN.height = 30;
			prevBTN.label = '上一步';
			prevBTN.addEventListener(MouseEvent.CLICK, prevClickHandler);
			
			nextBTN = new Button();
			nextBTN.width = 100;
			nextBTN.height = 30;
			nextBTN.label = '下一步';
			nextBTN.addEventListener(MouseEvent.CLICK, nextClickHandler);
			
			submitBTN = new Button();
			submitBTN.width = 100;
			submitBTN.height = 30;
			submitBTN.label = '提交';
			submitBTN.addEventListener(MouseEvent.CLICK, submitClickHandler);
		}
		
		private function acceptClickHandler(evt:MouseEvent):void
		{
			this.removeAllChildren();
			this.addChild(this.prevBTN);
			this.addChild(this.nextBTN);
			vs.selectedIndex ++;
		}
		
		private function rejectClickHandler(evt:MouseEvent):void
		{
			
		}
		
		private function prevClickHandler(evt:MouseEvent):void
		{
			vs.selectedIndex--;
			if(vs.selectedIndex <= 0)
			{
				this.removeAllChildren();
				this.addChild(this.rejectBTN);
				this.addChild(this.acceptBTN);
			}
			else if(vs.selectedIndex == (vs.numChildren-2))
			{
				this.removeChild(this.submitBTN);
				this.addChild(this.nextBTN);
			}
		}
		
		private function nextClickHandler(evt:MouseEvent):void
		{
			//Logger.info((vs.selectedChild as Object).name);
			
			//try
			//{
				(vs.selectedChild as IStep).buildVariable();
				vs.selectedIndex ++;
				if(vs.selectedIndex > (vs.numChildren -2))
				{
					this.removeChild(this.nextBTN);
					this.addChild(this.submitBTN);
				}
			/*}
			catch(err:Error)
			{
				Logger.debug(err.getStackTrace());
				Output.alert(err.message);
			}*/		
		}
		
		private function submitClickHandler(evt:MouseEvent):void
		{
			try
			{
				(vs.selectedChild as StepUpload).validateUpload(); 
				Application.application.submit();
			}
			catch(err:Error)
			{
				Logger.debug(err.getStackTrace());
				Output.alert(err.message);
			}
		}
	]]>
</mx:Script>
</mx:HBox>
