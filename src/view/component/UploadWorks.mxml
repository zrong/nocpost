<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" horizontalAlign="center" verticalAlign="middle" horizontalScrollPolicy="off" creationComplete="init()">
	<mx:Script>
		<![CDATA[
			import flash.net.navigateToURL;
			import mx.charts.BubbleChart;
			import mx.events.PropertyChangeEvent;
			import utils.Output;		
			import flash.net.FileReference;
			import flash.net.FileFilter;
			import utils.Config;
			import utils.type.*;
			import net.zengrong.logging.Logger;
			import mx.controls.Button;
			
			[Bindable]
			public var uploadItem:XML;
			[Bindable]
			public var uploadFR:FileReference;
			
			private var downBlankWordBTN:Button;
			
			//只有这个值为真，才会允许将这个上传模块加入上传列表中
			public var isModify:Boolean;		
			
			private function init():void
			{
				uploadFR = new FileReference();
				uploadFR.addEventListener(Event.SELECT, selectHandler);
				buildDownBlankWordBTN();
			}
			
			/**
			 * uploadItem变动的时候执行
			 * */
			private function uploadItemChange(evt:PropertyChangeEvent):void
			{
				Logger.info('uploadItemChange执行,oldValue:{1}\nnewValue:{2}', evt.oldValue, evt.newValue);
				Logger.info('uploadItemChange执行,kind:{1}\nproperty:{2}', evt.kind, evt.property);
				var blankWordURL:String = (evt.newValue as XML).upload_blank_word.toString();
				if(blankWordURL.length > 0)
				//如果提供了空白word电子表格下载地址，就建立一个按钮下载空白电子表格
				{
					//buildDownBlankWordBTN(blankWordURL);
				}
			}
			
			/**
			 * 建立下载登记表的按钮，该函数必须在本组件create完成后才能执行，因此放在init中了
			 * */
			private function buildDownBlankWordBTN():void
			{
				var blankWordURL:String = uploadItem.upload_blank_word.toString();
				Logger.info('buildDownBlankWordBTN执行,blankWordURL：{1},length:{2}', blankWordURL, blankWordURL.length);
				if(blankWordURL.length > 0)
				//如果提供了空白word电子表格下载地址，就建立一个按钮下载空白电子表格
				{
					var clickHandler:Function = function():void
					{
						flash.net.navigateToURL(new URLRequest(blankWordURL), '_blank');
					}
					if(downBlankWordBTN == null)
					{
						downBlankWordBTN = new Button();
						downBlankWordBTN.label = '下载空白表格';
						downBlankWordBTN.toolTip = '点击下载空白Word格式电子表格，填写后上传。';	
						downBlankWordBTN.addEventListener(MouseEvent.CLICK, clickHandler);
						selectBox.addChildAt(downBlankWordBTN, selectBox.getChildIndex(selectBTN)+1);
					}
				}
				
			}
			
			/**
			 * 当前选择文件的类型是否在允许的范围内
			 * */
			private function validateType($type:String):Boolean
			{
				var __type:String = uploadItem.upload_attribute_postfix.toString().toLowerCase();
				return __type.lastIndexOf($type.toLowerCase()) != -1;
			}
			
			private function clickHandler(evt:MouseEvent):void
			{
				var __typeFilter:FileFilter = new FileFilter(uploadItem.@name+'('+uploadItem.upload_attribute_postfix+')', uploadItem.upload_attribute_postfix);
				uploadFR.browse([__typeFilter]);
			}
			
			private function selectHandler(evt:Event):void
			{
				//选择文件的时候，先将isModify置为未改变，放置选择的文件不符合规定
				isModify = false;
				Logger.debug(' uploadItem:{1}',  uploadItem);				
				var __file:FileReference = evt.target as FileReference;
				var __size:Number = Config.toByteNum(Number(uploadItem.upload_attribute_size_limit));
				if(__file.size > __size)
				{
					Output.alert('选择的文件过大！');
					uploadSizeLabel.text = '';
					uploadNameLabel.text = '';
					return;
				}
				if(!validateType(__file.type))
				{
					Output.alert('选择的文件类型不对！');
					uploadSizeLabel.text = '';
					uploadNameLabel.text = '';
					return;
				}
				isModify = true;
				uploadSizeLabel.text = Config.toByteName(__file.size);
				uploadNameLabel.text = __file.name;
			}
			
			public function buildVariable():URLVariables
			{
				var __var:URLVariables = new URLVariables();
				__var[StepType.STEP_NAME] = StepType.STEP_UPLOAD;
				__var[ModeType.MODE_NAME] = Config.MOD_TYPE;
				__var.upload_attribute_id = uploadItem.@id;
				__var.pdt_id = Config.RESULT_DATA.pdt_id;
				__var.game_code = Config.RESULT_DATA.game_code;
				__var.pdt_kind_code = Config.RESULT_DATA.pdt_kind_code;
				__var.pdt_group = Config.RESULT_DATA.pdt_group;
				__var.pdt_area = Config.RESULT_DATA.pdt_area;
				/** 如果这个项目需要详细的合作者信息，并且uploadItem.index有值，就设置author_other_info_id的值
				 * uploaditem.index在默认的情况下不会有值，因为如果是从PHP获取的XML，根本就没有这个节点。
				 * 只有是在CopartnerInfo类中设置的XML才添加了这个index节点
				 * author_other_info_id这个变量，仅当当前上传的图片是合作者的照片的时候，才需要设定
				 * 它的值，来自于step_set_info时返回的值
				 * uploadItem.index的值是基于0的序号，正好可以用来获取Config.RESULT_DATA.pdt_author_other_info_id.item这个XMLList的值
				 * */
				 Logger.info("Config.IS_NEED_COPARTNER_INFO:{1}", Config.IS_NEED_COPARTNER_INFO);
				 Logger.info(" uploadItem.index:{1}",  uploadItem.index);
				if(Config.IS_NEED_COPARTNER_INFO && (uploadItem.index != null))				
				{
					//__var.author_other_info_id = Config.RESULT_DATA.pdt_author_other_info_id.item[uploadItem.index].@id;
				}
				Logger.info('__var:\n{1}', __var);
				return __var;
			}
		]]>
	</mx:Script>
	<mx:Validator id="selectV" source="{uploadNameLabel}" property="text" listener="{selectBTN}" 
		requiredFieldError="{Config.REQUIRED_FIELD_ERROR}"/>
	<mx:HBox id="selectBox">
		<mx:Label id="itemNameLabel" text="{uploadItem.@name}" width="150" textAlign="right"/>
		<mx:Button id="selectBTN" label="选择文件" click="clickHandler(event)"/>
		<mx:Label id="uploadSizeLabel" width="80" text="{uploadItem.upload_file_size}"/>
		<mx:Label id="uploadNameLabel" name="{itemNameLabel.text}" width="400" text="{uploadItem.upload_file_name}"/>
	</mx:HBox>
	<mx:Label text="{uploadItem.upload_attribute_introduce}  允许的文件格式：{uploadItem.upload_attribute_postfix}  文件大小限制：{uploadItem.upload_attribute_size_limit}MB" textAlign="center"/>
	<mx:HRule  width="100%"/>	
</mx:VBox>
